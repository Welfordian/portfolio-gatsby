{"version":3,"file":"component---src-pages-watch-together-js-aabc697e2df45a8877a8.js","mappings":"6JAEMA,EAAAA,SAAAA,GACF,aAAe,OACX,cADU,KAiCb,OAlCCA,EAAAA,EAAAA,GAAAA,EAAAA,GAGD,YAEDC,OAAA,WACI,OACI,uBAAKC,UAAS,kBAAmBC,KAAKC,MAAMC,KAAO,GAAK,UAAY,kBAAgB,cAAcC,KAAK,SAAS,aAAW,QACvH,uBAAKJ,UAAU,+DAEf,uBAAKA,UAAU,sCACX,uBAAKA,UAAU,mFACX,uBAAKA,UAAU,mHACX,uBAAKA,UAAU,iCACX,uBAAKA,UAAU,oCACX,uBAAKA,UAAU,mDACX,sBAAIA,UAAU,mDAAmDK,GAAG,eAAgBJ,KAAKC,MAAMI,OAE/F,uBAAKN,UAAU,QACTC,KAAKC,MAAMK,aAK7B,uBAAKP,UAAU,kEACTC,KAAKC,MAAMM,QAAQC,KAAI,SAAAC,GACrB,OAAOA,WAQtC,EAlCCZ,CAAca,EAAAA,WAqCpB,O,0FChCMC,G,QAAAA,SAAAA,GACF,aAAe,IAAD,SACV,sBAEKC,MAAQ,CACTC,OAAQ,GACRC,WAAW,EACXC,aAAc,CACV,0BAAQhB,UAAU,qCAAqCiB,QAAS,kBAAMC,EAAAA,EAAAA,QAAgBC,OAAOC,SAASC,KAAhB,mBAAyC,EAAKR,MAAMC,UAA1I,aACA,0BAAQd,UAAU,qCAAqCiB,QAAS,kBAAM,EAAKK,SAAS,CAACP,WAAW,MAAhG,YARE,GADZH,EAAAA,EAAAA,GAAAA,EAAAA,GAYD,kBA8BA,OA9BA,EAEDW,OAAA,WACI,OAAQ,CAAC,MAAM,KAAK,KAAK,KAAK,MAAMC,QAAQ,UAAU,SAAAC,GAAC,OAClDA,EAAIC,OAAOC,gBAAgB,IAAIC,WAAW,IAAI,GAAK,IAAMH,EAAI,GAAGI,SAAS,QAEjF,EAEDC,WAAA,YACIZ,EAAAA,EAAAA,QAAgBC,OAAOC,SAASC,KAAhB,mBAA0CpB,KAAKsB,WAClE,EAEDxB,OAAA,WAAU,IAAD,OACL,OACI,gCACI,sBAAIC,UAAU,wBAAd,kBAEA,qBAAGA,UAAU,oBAAb,yCAEA,uBAAKA,UAAU,mCACX,0BAAQA,UAAU,qCAAqCiB,QAAS,kBAAM,EAAKa,eAA3E,eAEA,0BAAQ9B,UAAU,qCAAqCiB,QAAS,kBAAM,EAAKK,SAAS,CAACP,WAAW,MAAhG,cAGJ,gBAAC,IAAD,CAAOT,MAAM,qBAAqBH,KAAMF,KAAKY,MAAME,UAAWP,QAASP,KAAKY,MAAMG,cAC9E,yBAAOe,KAAK,OAAO/B,UAAU,2BAA2BgC,YAAY,UAAUC,SAAU,SAAAC,GAAC,OAAI,EAAKZ,SAAS,CAACR,OAAQoB,EAAEC,OAAOC,SAASA,MAAOnC,KAAKY,MAAMC,YAIvK,EA1CCF,CAAsBD,EAAAA,YA6C5B","sources":["webpack://gatsby-starter-default/./src/components/Modal.js","webpack://gatsby-starter-default/./src/pages/watch-together.js"],"sourcesContent":["import * as React from \"react\";\n\nclass Modal extends React.Component {\n    constructor() {\n        super();\n    }\n    \n    render () {\n        return (\n            <div className={`relative z-10 ${this.props.open ? '' : 'hidden'}`} aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n                <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"></div>\n\n                <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                    <div className=\"flex items-end sm:items-center justify-center min-h-full p-4 text-center sm:p-0\">\n                        <div className=\"relative bg-gray-800 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:max-w-lg sm:w-full\">\n                            <div className=\"px-4 pt-5 pb-5 sm:p-6 sm:pb-6\">\n                                <div className=\"sm:flex sm:items-start flex-grow\">\n                                    <div className=\"mt-3 text-center sm:mt-0 sm:text-left flex-grow\">\n                                        <h3 className=\"text-xl leading-6 font-medium text-gray-200 mb-8\" id=\"modal-title\">{ this.props.title }</h3>\n                                        \n                                        <div className=\"mt-2\">\n                                            { this.props.children }\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"bg-gray-800 px-4 py-3 sm:px-6 flex flex-row-reverse gap-3 mb-4\">\n                                { this.props.buttons.map(button => {\n                                    return button\n                                }) }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Modal","import * as React from \"react\"\nimport { navigate } from 'gatsby';\nimport Layout from \"../components/Layout\";\nimport Modal from \"../components/Modal\";\nimport {isBrowser} from \"../services/auth\";\nimport {ThemeProvider} from \"../context/Layout\";\n\nclass WatchTogether extends React.Component {\n    constructor() {\n        super();\n        \n        this.state = {\n            roomId: \"\",\n            modalOpen: false,\n            modalButtons: [\n                <button className=\"bg-black text-white px-3 py-4 w-36\" onClick={() => isBrowser() && (window.location.href =`/watch-together/${this.state.roomId}`)}>Join Room</button>,\n                <button className=\"bg-black text-white px-3 py-4 w-36\" onClick={() => this.setState({modalOpen: false})}>Cancel</button>\n            ]\n        }\n    }\n    \n    uuidv4() {\n        return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n            (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n    }\n    \n    createRoom() {\n        isBrowser() && (window.location.href = `/watch-together/${this.uuidv4()}`);\n    }\n    \n    render() {\n        return (\n            <>\n                <h1 className=\"text-4xl text-center\">Watch Together</h1>\n\n                <p className=\"mt-3 text-center\">Watch YouTube videos together in sync</p>\n\n                <div className=\"flex justify-center gap-5 mt-12\">\n                    <button className=\"bg-black text-white px-3 py-4 w-36\" onClick={() => this.createRoom()}>Create Room</button>\n\n                    <button className=\"bg-black text-white px-3 py-4 w-36\" onClick={() => this.setState({modalOpen: true})}>Join Room</button>\n                </div>\n\n                <Modal title=\"Join existing room\" open={this.state.modalOpen} buttons={this.state.modalButtons}>\n                    <input type=\"text\" className=\"w-full px-2 py-3 text-lg\" placeholder=\"Room ID\" onChange={e => this.setState({roomId: e.target.value})} value={this.state.roomId} />\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default WatchTogether\n"],"names":["Modal","render","className","this","props","open","role","id","title","children","buttons","map","button","React","WatchTogether","state","roomId","modalOpen","modalButtons","onClick","isBrowser","window","location","href","setState","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","createRoom","type","placeholder","onChange","e","target","value"],"sourceRoot":""}